// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model About {
  id      Int    @id @default(autoincrement())
  content String
}

model Faq {
  id       Int    @id @default(autoincrement())
  question String
  content  String
}

model News {
  id         Int      @id @default(autoincrement())
  img        String
  alt        String
  date       String
  title      String   @unique
  text       String
  slug       String   @unique
  iso_date   String
  categories String[]
  content    String
}

model Specialty {
  id             Int             @id @default(autoincrement())
  code           String // например "09.02.07"
  name           String // название специальности
  qualification  String // квалификация (например "Техник-программист")
  durationMonths Int // срок обучения в месяцах
  base           Int // база (после 9 или 11 классов)
  form           String // очная / заочная
  AdmissionPlan  AdmissionPlan[]
  Abiturient     Abiturient[]
}

model Abiturient {
  id          Int       @id @default(autoincrement())
  full_name   String
  specialtyId Int
  specialty   Specialty @relation(fields: [specialtyId], references: [id], onDelete: Cascade)
  score       Float?
  isEnrolled  Boolean   @default(false)
}

enum Funding {
  BUDGET // бюджет
  PAID // небюджет (платное)
}

model AdmissionPlan {
  id          Int       @id @default(autoincrement())
  specialtyId Int
  specialty   Specialty @relation(fields: [specialtyId], references: [id], onDelete: Cascade)
  year        Int
  funding     Funding
  price       Int?
  places      Int
}
